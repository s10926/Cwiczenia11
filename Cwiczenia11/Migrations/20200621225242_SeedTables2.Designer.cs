// <auto-generated />
using System;
using Cwiczenia11.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cwiczenia11.Migrations
{
    [DbContext(typeof(DoctorsDbContext))]
    [Migration("20200621225242_SeedTables2")]
    partial class SeedTables2
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cwiczenia11.Models.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdDoctor");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            IdDoctor = 1,
                            Email = "aprofit0@ning.com",
                            FirstName = "Alva",
                            LastName = "Profit"
                        },
                        new
                        {
                            IdDoctor = 2,
                            Email = "ccottem1@examiner.com",
                            FirstName = "Cass",
                            LastName = "Cottem"
                        },
                        new
                        {
                            IdDoctor = 3,
                            Email = "msaintepaul2@bbb.org",
                            FirstName = "Maressa",
                            LastName = "Sainte Paul"
                        },
                        new
                        {
                            IdDoctor = 4,
                            Email = "akhomin3@reference.com",
                            FirstName = "Arlin",
                            LastName = "Khomin"
                        },
                        new
                        {
                            IdDoctor = 5,
                            Email = "rshapira4@ebay.com",
                            FirstName = "Reeva",
                            LastName = "Shapira"
                        },
                        new
                        {
                            IdDoctor = 6,
                            Email = "sdudley5@surveymonkey.com",
                            FirstName = "Saw",
                            LastName = "Dudley"
                        },
                        new
                        {
                            IdDoctor = 7,
                            Email = "ageorgiades6@linkedin.com",
                            FirstName = "Amil",
                            LastName = "Georgiades"
                        },
                        new
                        {
                            IdDoctor = 8,
                            Email = "abessey7@networkadvertising.org",
                            FirstName = "Alica",
                            LastName = "Bessey"
                        },
                        new
                        {
                            IdDoctor = 9,
                            Email = "asemered8@washingtonpost.com",
                            FirstName = "Adel",
                            LastName = "Semered"
                        },
                        new
                        {
                            IdDoctor = 10,
                            Email = "dlambol9@yellowbook.com",
                            FirstName = "Dieter",
                            LastName = "Lambol"
                        });
                });

            modelBuilder.Entity("Cwiczenia11.Models.Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdMedicament");

                    b.ToTable("Medicaments");

                    b.HasData(
                        new
                        {
                            IdMedicament = 1,
                            Description = "Cardinal Health",
                            Name = "PHENYLEPHRINE HYDROCHLORIDE",
                            Type = "Phenylephrine Hydrochloride"
                        },
                        new
                        {
                            IdMedicament = 2,
                            Description = "THEFACESHOP CO., LTD.",
                            Name = "TITANIUM DIOXIDE",
                            Type = "PHYTOGENIC INFINITE MAKEUP BASE"
                        },
                        new
                        {
                            IdMedicament = 3,
                            Description = "West-Ward Pharmaceutical Corp",
                            Name = "ceftriaxone",
                            Type = "Ceftriaxone"
                        },
                        new
                        {
                            IdMedicament = 4,
                            Description = "Perrigo New York Inc",
                            Name = "mineral oil, petrolatum, phenylephrine HCl",
                            Type = "Hemorrhoidal"
                        },
                        new
                        {
                            IdMedicament = 5,
                            Description = "Akorn, Inc.",
                            Name = "Fluorescein Sodium",
                            Type = "FUL-GLO"
                        },
                        new
                        {
                            IdMedicament = 6,
                            Description = "Mason Chemical Company",
                            Name = "Benzalkonium Chloride",
                            Type = "Nobac Plus AB-F"
                        },
                        new
                        {
                            IdMedicament = 7,
                            Description = "Novartis Pharmaceuticals Corporation",
                            Name = "carbamazepine",
                            Type = "Tegretol"
                        },
                        new
                        {
                            IdMedicament = 8,
                            Description = "GlaxoSmithKline Consumer Healthcare LP",
                            Name = "sodium fluoride",
                            Type = "BIOTENE"
                        },
                        new
                        {
                            IdMedicament = 9,
                            Description = "Kremers Urban Pharmaceuticals Inc.",
                            Name = "anastrozole",
                            Type = "Anastrozole"
                        },
                        new
                        {
                            IdMedicament = 10,
                            Description = "Taizhou Xinzhixuan Daily-Use Co., Ltd.",
                            Name = "TRICLOSAN",
                            Type = "Healing Waters Mandarin Vanilla Antibacterial Hand Soap"
                        },
                        new
                        {
                            IdMedicament = 11,
                            Description = "Aurobindo Pharma Limited",
                            Name = "Lamotrigine",
                            Type = "Lamotrigine"
                        },
                        new
                        {
                            IdMedicament = 12,
                            Description = "Kinray Inc.",
                            Name = "Mineral Oil",
                            Type = "Mineral Oil"
                        },
                        new
                        {
                            IdMedicament = 13,
                            Description = "QUALITY CHOICE (Chain Drug Marketing Association)",
                            Name = "Isopropyl alcohol",
                            Type = "Isopropyl alcohol"
                        },
                        new
                        {
                            IdMedicament = 14,
                            Description = "Preferred Pharmaceuticals, Inc",
                            Name = "Brompheniramine maleate and Pseudoephedrine hydrochloride",
                            Type = "Q-Tapp"
                        },
                        new
                        {
                            IdMedicament = 15,
                            Description = "Graceway Pharmaceuticals, LLC",
                            Name = "orphenadrine citrate",
                            Type = "Norflex"
                        },
                        new
                        {
                            IdMedicament = 16,
                            Description = "ADVANCED BIOMEDICS INC",
                            Name = "ALLANTOIN GLYCERIN",
                            Type = "NEUTRACETT"
                        },
                        new
                        {
                            IdMedicament = 17,
                            Description = "Mylan Institutional Inc.",
                            Name = "doxazosin mesylate",
                            Type = "doxazosin"
                        },
                        new
                        {
                            IdMedicament = 18,
                            Description = "Jani-Source, LLC",
                            Name = "TRICLOSAN",
                            Type = "High Five"
                        },
                        new
                        {
                            IdMedicament = 19,
                            Description = "Avon Products, Inc.",
                            Name = "TOLNAFTATE",
                            Type = "Foot Works Healthy"
                        },
                        new
                        {
                            IdMedicament = 20,
                            Description = "BioComp Pharma, Inc.",
                            Name = "BENZOYL PEROXIDE",
                            Type = "BP Cleansing"
                        });
                });

            modelBuilder.Entity("Cwiczenia11.Models.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdPatient");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            IdPatient = 1,
                            Date = new DateTime(1965, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jania",
                            LastName = "Sherbrook"
                        },
                        new
                        {
                            IdPatient = 2,
                            Date = new DateTime(1978, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Collie",
                            LastName = "Jenkison"
                        },
                        new
                        {
                            IdPatient = 3,
                            Date = new DateTime(1970, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Dulcia",
                            LastName = "Alejandre"
                        },
                        new
                        {
                            IdPatient = 4,
                            Date = new DateTime(1946, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Westleigh",
                            LastName = "McCome"
                        },
                        new
                        {
                            IdPatient = 5,
                            Date = new DateTime(1976, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Anthe",
                            LastName = "MacDonogh"
                        },
                        new
                        {
                            IdPatient = 6,
                            Date = new DateTime(1946, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Blair",
                            LastName = "Burtwell"
                        },
                        new
                        {
                            IdPatient = 7,
                            Date = new DateTime(1982, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Isahella",
                            LastName = "Drepp"
                        },
                        new
                        {
                            IdPatient = 8,
                            Date = new DateTime(1975, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Freddy",
                            LastName = "Burgoin"
                        },
                        new
                        {
                            IdPatient = 9,
                            Date = new DateTime(1974, 7, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bobbie",
                            LastName = "Hayman"
                        },
                        new
                        {
                            IdPatient = 10,
                            Date = new DateTime(1976, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Dinny",
                            LastName = "Sneesbie"
                        });
                });

            modelBuilder.Entity("Cwiczenia11.Models.Prescription", b =>
                {
                    b.Property<int>("IdPrescription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DoctorIdDoctor")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.Property<int?>("PatientIdPatient")
                        .HasColumnType("int");

                    b.HasKey("IdPrescription");

                    b.HasIndex("DoctorIdDoctor");

                    b.HasIndex("PatientIdPatient");

                    b.ToTable("Prescriptions");

                    b.HasData(
                        new
                        {
                            IdPrescription = 1,
                            Date = new DateTime(2019, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2019, 7, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 5,
                            IdPatient = 6
                        },
                        new
                        {
                            IdPrescription = 2,
                            Date = new DateTime(2019, 5, 23, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2019, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 2,
                            IdPatient = 6
                        },
                        new
                        {
                            IdPrescription = 3,
                            Date = new DateTime(2019, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2019, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 3,
                            IdPatient = 9
                        },
                        new
                        {
                            IdPrescription = 4,
                            Date = new DateTime(2019, 6, 13, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2019, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 2,
                            IdPatient = 2
                        },
                        new
                        {
                            IdPrescription = 5,
                            Date = new DateTime(2019, 5, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2019, 7, 7, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 3,
                            IdPatient = 6
                        },
                        new
                        {
                            IdPrescription = 6,
                            Date = new DateTime(2019, 5, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2019, 7, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 8,
                            IdPatient = 2
                        },
                        new
                        {
                            IdPrescription = 7,
                            Date = new DateTime(2019, 5, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2019, 7, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 4,
                            IdPatient = 8
                        },
                        new
                        {
                            IdPrescription = 8,
                            Date = new DateTime(2019, 6, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2019, 7, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 9,
                            IdPatient = 5
                        },
                        new
                        {
                            IdPrescription = 9,
                            Date = new DateTime(2019, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2019, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 3,
                            IdPatient = 8
                        },
                        new
                        {
                            IdPrescription = 10,
                            Date = new DateTime(2019, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2019, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 9,
                            IdPatient = 9
                        },
                        new
                        {
                            IdPrescription = 11,
                            Date = new DateTime(2019, 6, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2019, 7, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 7,
                            IdPatient = 10
                        },
                        new
                        {
                            IdPrescription = 12,
                            Date = new DateTime(2019, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2019, 7, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 7,
                            IdPatient = 1
                        },
                        new
                        {
                            IdPrescription = 13,
                            Date = new DateTime(2019, 5, 24, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2019, 7, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 6,
                            IdPatient = 7
                        },
                        new
                        {
                            IdPrescription = 14,
                            Date = new DateTime(2019, 6, 19, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2019, 6, 22, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 5,
                            IdPatient = 3
                        },
                        new
                        {
                            IdPrescription = 15,
                            Date = new DateTime(2019, 6, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2019, 6, 29, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 2,
                            IdPatient = 3
                        },
                        new
                        {
                            IdPrescription = 16,
                            Date = new DateTime(2019, 6, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2019, 7, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 10,
                            IdPatient = 7
                        },
                        new
                        {
                            IdPrescription = 17,
                            Date = new DateTime(2019, 6, 16, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2019, 6, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 3,
                            IdPatient = 4
                        },
                        new
                        {
                            IdPrescription = 18,
                            Date = new DateTime(2019, 5, 27, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2019, 7, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 6,
                            IdPatient = 3
                        },
                        new
                        {
                            IdPrescription = 19,
                            Date = new DateTime(2019, 6, 17, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2019, 7, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 6,
                            IdPatient = 9
                        },
                        new
                        {
                            IdPrescription = 20,
                            Date = new DateTime(2019, 6, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            DueDate = new DateTime(2019, 7, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            IdDoctor = 5,
                            IdPatient = 9
                        });
                });

            modelBuilder.Entity("Cwiczenia11.Models.Prescription_Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .HasColumnType("int");

                    b.Property<int>("IdPrescription")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Dose")
                        .HasColumnType("int");

                    b.Property<int?>("MedicamentIdMedicament")
                        .HasColumnType("int");

                    b.Property<int?>("PrescriptionIdPrescription")
                        .HasColumnType("int");

                    b.HasKey("IdMedicament", "IdPrescription");

                    b.HasIndex("MedicamentIdMedicament");

                    b.HasIndex("PrescriptionIdPrescription");

                    b.ToTable("Prescription_Medicaments");

                    b.HasData(
                        new
                        {
                            IdMedicament = 11,
                            IdPrescription = 1,
                            Details = "cursus id turpis integer aliquet massa id lobortis",
                            Dose = 79
                        },
                        new
                        {
                            IdMedicament = 18,
                            IdPrescription = 17,
                            Details = "turpis nec euismod scelerisque quam turpis adipiscing lorem vitae",
                            Dose = 76
                        },
                        new
                        {
                            IdMedicament = 7,
                            IdPrescription = 10,
                            Details = "id sapien in sapien iaculis congue",
                            Dose = 61
                        },
                        new
                        {
                            IdMedicament = 3,
                            IdPrescription = 15,
                            Details = "non sodales sed tincidunt eu",
                            Dose = 50
                        },
                        new
                        {
                            IdMedicament = 14,
                            IdPrescription = 7,
                            Details = "consequat lectus in est risus auctor",
                            Dose = 82
                        },
                        new
                        {
                            IdMedicament = 1,
                            IdPrescription = 19,
                            Details = "accumsan tellus nisi eu orci mauris lacinia sapien quis",
                            Dose = 60
                        },
                        new
                        {
                            IdMedicament = 14,
                            IdPrescription = 11,
                            Details = "ligula pellentesque ultrices phasellus id sapien in",
                            Dose = 95
                        },
                        new
                        {
                            IdMedicament = 16,
                            IdPrescription = 3,
                            Details = "sed lacus morbi sem mauris laoreet ut rhoncus aliquet pulvinar",
                            Dose = 19
                        },
                        new
                        {
                            IdMedicament = 6,
                            IdPrescription = 5,
                            Details = "aliquam non mauris morbi non lectus aliquam sit amet",
                            Dose = 8
                        },
                        new
                        {
                            IdMedicament = 7,
                            IdPrescription = 14,
                            Details = "dictumst etiam faucibus cursus urna ut tellus",
                            Dose = 26
                        },
                        new
                        {
                            IdMedicament = 17,
                            IdPrescription = 1,
                            Details = "nam tristique tortor eu pede",
                            Dose = 40
                        },
                        new
                        {
                            IdMedicament = 4,
                            IdPrescription = 8,
                            Details = "vestibulum ante ipsum primis in faucibus",
                            Dose = 63
                        },
                        new
                        {
                            IdMedicament = 4,
                            IdPrescription = 16,
                            Details = "pede venenatis non sodales sed tincidunt eu felis fusce posuere",
                            Dose = 12
                        },
                        new
                        {
                            IdMedicament = 20,
                            IdPrescription = 8,
                            Details = "vulputate ut ultrices vel augue vestibulum ante ipsum",
                            Dose = 28
                        },
                        new
                        {
                            IdMedicament = 4,
                            IdPrescription = 9,
                            Details = "libero rutrum ac lobortis vel dapibus at diam nam tristique",
                            Dose = 8
                        },
                        new
                        {
                            IdMedicament = 9,
                            IdPrescription = 19,
                            Details = "orci luctus et ultrices posuere cubilia curae",
                            Dose = 12
                        },
                        new
                        {
                            IdMedicament = 15,
                            IdPrescription = 15,
                            Details = "erat quisque erat eros viverra eget congue eget semper rutrum",
                            Dose = 37
                        },
                        new
                        {
                            IdMedicament = 8,
                            IdPrescription = 17,
                            Details = "sem sed sagittis nam congue risus semper porta",
                            Dose = 8
                        },
                        new
                        {
                            IdMedicament = 8,
                            IdPrescription = 18,
                            Details = "et tempus semper est quam pharetra magna ac consequat",
                            Dose = 20
                        },
                        new
                        {
                            IdMedicament = 7,
                            IdPrescription = 2,
                            Details = "non velit donec diam neque vestibulum eget",
                            Dose = 22
                        });
                });

            modelBuilder.Entity("Cwiczenia11.Models.Prescription", b =>
                {
                    b.HasOne("Cwiczenia11.Models.Doctor", "Doctor")
                        .WithMany("Prescriptions")
                        .HasForeignKey("DoctorIdDoctor");

                    b.HasOne("Cwiczenia11.Models.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("PatientIdPatient");
                });

            modelBuilder.Entity("Cwiczenia11.Models.Prescription_Medicament", b =>
                {
                    b.HasOne("Cwiczenia11.Models.Medicament", "Medicament")
                        .WithMany("Prescriptions")
                        .HasForeignKey("MedicamentIdMedicament");

                    b.HasOne("Cwiczenia11.Models.Prescription", "Prescription")
                        .WithMany("Medicaments")
                        .HasForeignKey("PrescriptionIdPrescription");
                });
#pragma warning restore 612, 618
        }
    }
}
