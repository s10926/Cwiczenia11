// <auto-generated />
using System;
using Cwiczenia11.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Cwiczenia11.Migrations
{
    [DbContext(typeof(DoctorsDbContext))]
    [Migration("20200621201823_SeedTables")]
    partial class SeedTables
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Cwiczenia11.Models.Doctor", b =>
                {
                    b.Property<int>("IdDoctor")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdDoctor");

                    b.ToTable("Doctors");

                    b.HasData(
                        new
                        {
                            IdDoctor = 1,
                            Email = "aprofit0@ning.com",
                            FirstName = "Alva",
                            LastName = "Profit"
                        },
                        new
                        {
                            IdDoctor = 2,
                            Email = "ccottem1@examiner.com",
                            FirstName = "Cass",
                            LastName = "Cottem"
                        },
                        new
                        {
                            IdDoctor = 3,
                            Email = "msaintepaul2@bbb.org",
                            FirstName = "Maressa",
                            LastName = "Sainte Paul"
                        },
                        new
                        {
                            IdDoctor = 4,
                            Email = "akhomin3@reference.com",
                            FirstName = "Arlin",
                            LastName = "Khomin"
                        },
                        new
                        {
                            IdDoctor = 5,
                            Email = "rshapira4@ebay.com",
                            FirstName = "Reeva",
                            LastName = "Shapira"
                        },
                        new
                        {
                            IdDoctor = 6,
                            Email = "sdudley5@surveymonkey.com",
                            FirstName = "Saw",
                            LastName = "Dudley"
                        },
                        new
                        {
                            IdDoctor = 7,
                            Email = "ageorgiades6@linkedin.com",
                            FirstName = "Amil",
                            LastName = "Georgiades"
                        },
                        new
                        {
                            IdDoctor = 8,
                            Email = "abessey7@networkadvertising.org",
                            FirstName = "Alica",
                            LastName = "Bessey"
                        },
                        new
                        {
                            IdDoctor = 9,
                            Email = "asemered8@washingtonpost.com",
                            FirstName = "Adel",
                            LastName = "Semered"
                        },
                        new
                        {
                            IdDoctor = 10,
                            Email = "dlambol9@yellowbook.com",
                            FirstName = "Dieter",
                            LastName = "Lambol"
                        });
                });

            modelBuilder.Entity("Cwiczenia11.Models.Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdMedicament");

                    b.ToTable("Medicaments");
                });

            modelBuilder.Entity("Cwiczenia11.Models.Patient", b =>
                {
                    b.Property<int>("IdPatient")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("IdPatient");

                    b.ToTable("Patients");

                    b.HasData(
                        new
                        {
                            IdPatient = 1,
                            Date = new DateTime(1965, 1, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Jania",
                            LastName = "Sherbrook"
                        },
                        new
                        {
                            IdPatient = 2,
                            Date = new DateTime(1978, 4, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Collie",
                            LastName = "Jenkison"
                        },
                        new
                        {
                            IdPatient = 3,
                            Date = new DateTime(1970, 3, 2, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Dulcia",
                            LastName = "Alejandre"
                        },
                        new
                        {
                            IdPatient = 4,
                            Date = new DateTime(1946, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Westleigh",
                            LastName = "McCome"
                        },
                        new
                        {
                            IdPatient = 5,
                            Date = new DateTime(1976, 4, 8, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Anthe",
                            LastName = "MacDonogh"
                        },
                        new
                        {
                            IdPatient = 6,
                            Date = new DateTime(1946, 6, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Blair",
                            LastName = "Burtwell"
                        },
                        new
                        {
                            IdPatient = 7,
                            Date = new DateTime(1982, 10, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Isahella",
                            LastName = "Drepp"
                        },
                        new
                        {
                            IdPatient = 8,
                            Date = new DateTime(1975, 1, 31, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Freddy",
                            LastName = "Burgoin"
                        },
                        new
                        {
                            IdPatient = 9,
                            Date = new DateTime(1974, 7, 4, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Bobbie",
                            LastName = "Hayman"
                        },
                        new
                        {
                            IdPatient = 10,
                            Date = new DateTime(1976, 6, 26, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            FirstName = "Dinny",
                            LastName = "Sneesbie"
                        });
                });

            modelBuilder.Entity("Cwiczenia11.Models.Prescription", b =>
                {
                    b.Property<int>("IdPrescription")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DoctorIdDoctor")
                        .HasColumnType("int");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdDoctor")
                        .HasColumnType("int");

                    b.Property<int>("IdPatient")
                        .HasColumnType("int");

                    b.Property<int?>("PatientIdPatient")
                        .HasColumnType("int");

                    b.HasKey("IdPrescription");

                    b.HasIndex("DoctorIdDoctor");

                    b.HasIndex("PatientIdPatient");

                    b.ToTable("Prescriptions");
                });

            modelBuilder.Entity("Cwiczenia11.Models.Prescription_Medicament", b =>
                {
                    b.Property<int>("IdMedicament")
                        .HasColumnType("int");

                    b.Property<int>("IdPrescription")
                        .HasColumnType("int");

                    b.Property<string>("Details")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("Dose")
                        .HasColumnType("int");

                    b.Property<int?>("MedicamentIdMedicament")
                        .HasColumnType("int");

                    b.Property<int?>("PrescriptionIdPrescription")
                        .HasColumnType("int");

                    b.HasKey("IdMedicament", "IdPrescription");

                    b.HasIndex("MedicamentIdMedicament");

                    b.HasIndex("PrescriptionIdPrescription");

                    b.ToTable("Prescription_Medicaments");
                });

            modelBuilder.Entity("Cwiczenia11.Models.Prescription", b =>
                {
                    b.HasOne("Cwiczenia11.Models.Doctor", "Doctor")
                        .WithMany("Prescriptions")
                        .HasForeignKey("DoctorIdDoctor");

                    b.HasOne("Cwiczenia11.Models.Patient", "Patient")
                        .WithMany("Prescriptions")
                        .HasForeignKey("PatientIdPatient");
                });

            modelBuilder.Entity("Cwiczenia11.Models.Prescription_Medicament", b =>
                {
                    b.HasOne("Cwiczenia11.Models.Medicament", "Medicament")
                        .WithMany("Prescriptions")
                        .HasForeignKey("MedicamentIdMedicament");

                    b.HasOne("Cwiczenia11.Models.Prescription", "Prescription")
                        .WithMany("Medicaments")
                        .HasForeignKey("PrescriptionIdPrescription");
                });
#pragma warning restore 612, 618
        }
    }
}
